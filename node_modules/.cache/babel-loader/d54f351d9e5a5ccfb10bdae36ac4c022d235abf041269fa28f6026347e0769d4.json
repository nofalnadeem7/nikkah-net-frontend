{"ast":null,"code":"var _jsxFileName = \"/Users/nofalnadeem/Documents/SDA-Proj/nikkahnet-frontend/src/components/UserList/UserList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport \"./UserList.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserList = () => {\n  _s();\n  const [users, setUsers] = useState([]);\n  const [error, setError] = useState(\"\");\n  useEffect(() => {\n    console.log(1);\n    getUsers();\n  }, []);\n  const getUsers = async () => {\n    try {\n      // Fetch the users.json file from the public directory\n      let result = await fetch(\"/users.json\"); // No need for authorization header for static file\n      result = await result.json();\n\n      // Optionally, format the users data (e.g., calculate age, format name)\n      const formattedUsers = result.map(user => ({\n        ...user,\n        name: `${capitalizeString(user.firstname)} ${user.middlename ? capitalizeString(user.middlename) : \"\"} ${capitalizeString(user.lastname)} `,\n        age: calculateAge(new Date(user.dob)) // Calculate age from dob\n      }));\n      setUsers(formattedUsers);\n      console.log(formattedUsers);\n    } catch (err) {\n      setError(\"Failed to fetch users.\");\n    }\n  };\n\n  // Function to capitalize first letter of a string\n  const capitalizeString = string => {\n    if (string) {\n      return string.charAt(0).toUpperCase() + string.slice(1);\n    }\n    return string;\n  };\n\n  // Function to calculate age from dob\n  const calculateAge = dob => {\n    const today = new Date();\n    const birthDate = new Date(dob);\n    let age = today.getFullYear() - birthDate.getFullYear();\n    const m = today.getMonth() - birthDate.getMonth();\n    if (m < 0 || m === 0 && today.getDate() < birthDate.getDate()) {\n      age--;\n    }\n    return age;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"user-list-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"user-list-title\",\n      children: \"Users\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user-card-container\",\n      children: users.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user-details\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"user-name\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"User:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 17\n            }, this), \" \", item.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Email:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 17\n            }, this), \" \", item.email]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Age:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 17\n            }, this), \" \", item.age]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Religion:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 17\n            }, this), \" \", item.religion]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"view-profile-btn\",\n          children: \"View Profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n};\n_s(UserList, \"o+NI+CeCbaTLwFPWZcq2PimODw4=\");\n_c = UserList;\nexport default UserList;\nvar _c;\n$RefreshReg$(_c, \"UserList\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","UserList","_s","users","setUsers","error","setError","console","log","getUsers","result","fetch","json","formattedUsers","map","user","name","capitalizeString","firstname","middlename","lastname","age","calculateAge","Date","dob","err","string","charAt","toUpperCase","slice","today","birthDate","getFullYear","m","getMonth","getDate","className","children","fileName","_jsxFileName","lineNumber","columnNumber","item","index","email","religion","_c","$RefreshReg$"],"sources":["/Users/nofalnadeem/Documents/SDA-Proj/nikkahnet-frontend/src/components/UserList/UserList.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./UserList.css\"; \n\nconst UserList = () => {\n  const [users, setUsers] = useState([]);\n  const [error, setError] = useState(\"\");\n\n  useEffect(() => {\n    console.log(1);\n    getUsers();\n  }, []);\n\n  const getUsers = async () => {\n    try {\n      // Fetch the users.json file from the public directory\n      let result = await fetch(\"/users.json\"); // No need for authorization header for static file\n      result = await result.json();\n\n      // Optionally, format the users data (e.g., calculate age, format name)\n      const formattedUsers = result.map((user) => ({\n        ...user,\n        name:`${capitalizeString(user.firstname)} ${user.middlename ? capitalizeString(user.middlename) : \"\"} ${capitalizeString(user.lastname)} `,\n        age: calculateAge(new Date(user.dob)), // Calculate age from dob\n      }));\n\n      setUsers(formattedUsers);\n      console.log(formattedUsers);\n    } catch (err) {\n      setError(\"Failed to fetch users.\");\n    }\n  };\n\n  // Function to capitalize first letter of a string\n  const capitalizeString = (string) => {\n    if (string) {\n      return string.charAt(0).toUpperCase() + string.slice(1);\n    }\n    return string;\n  };\n\n  // Function to calculate age from dob\n  const calculateAge = (dob) => {\n    const today = new Date();\n    const birthDate = new Date(dob);\n    let age = today.getFullYear() - birthDate.getFullYear();\n    const m = today.getMonth() - birthDate.getMonth();\n    if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\n      age--;\n    }\n    return age;\n  };\n\n  return (\n        <div className=\"user-list-container\">\n      <h1 className=\"user-list-title\">Users</h1>\n      {error && <p className=\"error-message\">{error}</p>}\n\n      <div className=\"user-card-container\">\n        {users.map((item, index) => (\n          <div className=\"user-card\" key={index}>\n            <div className=\"user-details\">\n              <p className=\"user-name\">\n                <strong>User:</strong> {item.name}\n              </p>\n              <p>\n                <strong>Email:</strong> {item.email}\n              </p>\n              <p>\n                <strong>Age:</strong> {item.age}\n              </p>\n              <p>\n                <strong>Religion:</strong> {item.religion}\n              </p>\n            </div>\n            <button className=\"view-profile-btn\">View Profile</button>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default UserList;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}